apply plugin: 'com.android.application'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "org.mariotaku.pass"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each { buildType ->
        def file = rootProject.file('signing.properties')
        if (file.exists()) {
            def cfg = signingConfigs.maybeCreate(buildType.name)
            loadSigningConfig(cfg, file)
            buildType.signingConfig = cfg
        }
    }
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io/' }
}

dependencies {
    compile 'com.eftimoff:android-patternview:1.0.3@aar'
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.github.mariotaku:SQLiteQB:e3b8e3b6ac'
    compile 'com.squareup.okio:okio:1.6.0'
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    debugCompile 'com.facebook.stetho:stetho:1.2.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}

def loadSigningConfig(def cfg, def file) {
    Properties signingProp = new Properties()
    signingProp.load(file.newInputStream())
    cfg.setStoreFile(new File((String) signingProp.get('storeFile')))
    cfg.setStorePassword((String) signingProp.get('storePassword'))
    cfg.setKeyAlias((String) signingProp.get('keyAlias'))
    cfg.setKeyPassword((String) signingProp.get('keyPassword'))
}
